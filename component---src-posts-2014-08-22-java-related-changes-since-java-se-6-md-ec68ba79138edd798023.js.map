{"version":3,"file":"component---src-posts-2014-08-22-java-related-changes-since-java-se-6-md-ec68ba79138edd798023.js","mappings":"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","sources":["webpack://adrian-chia/./src/posts/2014-08-22-java-related-changes-since-java-se-6.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Java Syntax Related Changes Since Java SE 6\",\n  \"date\": \"2014-08-22T02:22:44-05:00\",\n  \"tags\": [\"android\", \"java\", \"jdk\"]\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`In this post I am going to discuss about JDK related changes since version 6 and how it may affect Android development.`}</p>\n    <h2>{`What’s New in Java SE 7 Syntax`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Binary Literals`}</p>\n        <p parentName=\"li\">{`We may display `}<strong parentName=\"p\">{`0b`}</strong>{` or `}<strong parentName=\"p\">{`0B`}</strong>{` in front of a number to indicate a binary number. E.g.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-java\"\n          }}>{`int aNum = 0b00100001 // 33\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Underscore in Numeric Literals`}</p>\n        <p parentName=\"li\">{`We can separate a group of numbers with underscore in between digits to make it more readable, and the actual value is the same as without underscore`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-java\"\n          }}>{`long ccNumber = 1111_1111_1111_1111L // which is the same as 1111111111111111L\n`}</code></pre>\n        <p parentName=\"li\"><strong parentName=\"p\">{`Note`}</strong></p>\n        <ol parentName=\"li\">\n          <li parentName=\"ol\">{`We cannot add underscore before and after decimal point`}</li>\n          <li parentName=\"ol\">{`We cannot add underscore as a prefix to a number (this make it as identifier and not a numeric literal)`}</li>\n          <li parentName=\"ol\">{`We cannot add underscore as a suffix to a number`}</li>\n          <li parentName=\"ol\">{`We cannot add underscire in the 0x radix prefix`}</li>\n        </ol>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`String in Switch Statement`}</p>\n        <p parentName=\"li\">{`In Java SE 6 if we want to do a conditional statement on a String we need to do it in a if…else Statement`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-java\"\n          }}>{`if(a.equals(\"apple\")) {\n    // do something\n} else if (a.equals(\"orange\")) {\n  // do another thing\n} else if (a.equals(\"pear\")) {\n  // do some other thing\n} else {\n  // do something when above conditions do not match\n}\n`}</code></pre>\n        <p parentName=\"li\">{`In Java SE 7 we can wrap it into a Switch Statement`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-java\"\n          }}>{`switch(a) {\n    case \"apple\":\n        //do something\n        break;\n    case \"orange\":\n        // do something\n        break;\n    case \"pear\":\n        // do somethin\n        break;\n    default:\n    // do something\n      break;\n}\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Type Inference for Generic instance Creation (a.k.a Diamond)`}</p>\n        <p parentName=\"li\">{`In Java SE 6 we can create a generic collection like a list of Strings in the following syntax`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-java\"\n          }}>{`List<String> strCollections = new ArrayList<String>();\n`}</code></pre>\n        <p parentName=\"li\">{`In Java SE 7 we can create the same list with a shorter syntax`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-java\"\n          }}>{`List<String> strCollections = new ArrayList<>();\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Improved Compiler Warnings and Errors When Using Non-Reifiable Formal Parameters with Varargs Methods`}</p>\n        <p parentName=\"li\">{`see `}<a parentName=\"p\" {...{\n            \"href\": \"http://docs.oracle.com/javase/7/docs/technotes/guides/language/non-reifiable-varargs.html\"\n          }}>{`http://docs.oracle.com/javase/7/docs/technotes/guides/language/non-reifiable-varargs.html`}</a>{` for more details.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Try-with-Resources`}</p>\n        <p parentName=\"li\">{`Java SE 6`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-java\"\n          }}>{`BufferedReader br;\ntry {\n    br = new BufferedReader(...);\n    br.readLine();\n} catch (IOException e) {\n    // do something\n} finally {\n    if (br != null) {\n        br.close();\n    }\n}\n`}</code></pre>\n        <p parentName=\"li\">{`Java SE 7`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-java\"\n          }}>{`try(BufferedReader br = new BufferedReader(...)) {\n  br.readLine();\n} catch (IOException e) {\n  // do something\n}\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Catch Multiple Exception Types and Rethrowing with Improved Type Checking`}</p>\n        <p parentName=\"li\">{`Java SE 6`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-java\"\n          }}>{`Class string;\ntry{\n  string = Class.forName(\"java.lang.String\");\n  string.getMethod(\"length\").invoke(\"some error\");\n} catch(ClassNotFoundException cnfe) {\n  System.out.println(cnfe.getMessage());\n} catch(IllegalAccessException iae1) {\n  System.out.println(iae1.getMessage());\n} catch(IllegalArgumentException iae2) {\n  System.out.println(iae2.getMessage());\n} catch(InvocationTargetException ite) {\n  System.out.println(ite.getMessage());\n} catch(SecurityException se) {\n  System.out.println(se.getMessage());\n} catch(NoSuchMethodException nsme) {\nSystem.out.println(nsme.getMessage());\n}\n`}</code></pre>\n        <p parentName=\"li\">{`Java SE 7`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-java\"\n          }}>{`try {\n  Class s = Class.forName(\"java.lang.String\");\n  s.getMethod(\"length\").invoke(\"some error\");\n} catch (ClassNotFoundException | IllegalAccessException\n        | IllegalArgumentException | InvocationTargetException\n        | SecurityException | NoSuchMethodException e) {\n  //Do something here\n  System.out.println(e.getMessage());\n}\n`}</code></pre>\n      </li>\n    </ul>\n    <p>{`More details about Java SE 7 changes are available on the `}<a parentName=\"p\" {...{\n        \"href\": \"http://www.oracle.com/technetwork/java/javase/jdk7-relnotes-418459.html\"\n      }}>{`Java SE 7 Features and Enhancements`}</a>{`, especially on the `}<a parentName=\"p\" {...{\n        \"href\": \"http://docs.oracle.com/javase/7/docs/technotes/guides/language/enhancements.html#javase7\"\n      }}>{`Java Programming Language Enhancements`}</a></p>\n    <h4>{`Can Android Support Java SE 7 Syntax?`}</h4>\n    <p>{`According to `}<a parentName=\"p\" {...{\n        \"href\": \"http://tools.android.com/tech-docs/new-build-system/user-guide#TOC-Using-sourceCompatibility-1.7\"\n      }}>{`tools.android.com`}</a>{`, you can use most of them with earlier version of Android with targetSDKVersion of 19 and set source compatibility to Java version 1.7, with the exception of `}<strong parentName=\"p\">{`Try-with-resources`}</strong>{` which you must use minSdkVersion of 19 (Android KitKat).`}</p>\n    <h2>{`What’s New in Java SE 8 Syntax`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Lambda Expressions`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-java\"\n          }}>{`processElements(\n    roster,\n    p -> p.getGender() == Person.Sex.MALE\n        && p.getAge() >= 18\n        && p.getAge() <= 25,\n        p -> p.getEmailAddress(),\n        email -> System.out.println(email)\n);\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Improved Type Inference`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Type Annotations and Pluggable Type Systems`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Repeating Annotations`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Method Parameter Reflection`}</p>\n      </li>\n    </ul>\n    <p>{`More details of Java SE 8 can be referred to `}<a parentName=\"p\" {...{\n        \"href\": \"http://www.oracle.com/technetwork/java/javase/8-whats-new-2157071.html\"\n      }}>{`What’s New in JDK 8`}</a></p>\n    <h4>{`Can Android Support Java SE 8 Syntax?`}</h4>\n    <p>{`In short (at the time of this blog post), not at the moment, although you can try with unofficial/third party libraries, such as `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/evant/gradle-retrolambda\"\n      }}>{`gradle-retrolambda`}</a>{` for lambda expressions :)`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}