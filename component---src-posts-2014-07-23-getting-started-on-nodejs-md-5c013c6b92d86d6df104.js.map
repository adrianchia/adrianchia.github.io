{"version":3,"file":"component---src-posts-2014-07-23-getting-started-on-nodejs-md-5c013c6b92d86d6df104.js","mappings":"2PAOaA,EAAe,CAC1B,MAAS,4BACT,KAAQ,4BACR,KAAQ,CAAC,SAAU,YAEfC,EAAc,CAClBD,aAAAA,GAGa,SAASE,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,GACF,YACD,OAAO,SALS,WAKT,UAAeH,EAAiBG,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,eAC5E,oLAEA,sFAEA,oBACE,eAAIC,WAAW,MAAf,eAAmC,cAAGA,WAAW,KAC7C,KAAQ,0CADuB,4CAGnC,eAAIA,WAAW,MAAf,gBAAoC,cAAGA,WAAW,KAC9C,KAAQ,qGADwB,sGAGpC,eAAIA,WAAW,MAAf,4CAAgE,cAAGA,WAAW,KAC1E,KAAQ,sBADoD,SAAhE,2BAGA,eAAIA,WAAW,MAAf,qDAAyE,cAAGA,WAAW,KACnF,KAAQ,uBAD6D,SAAzE,MAEwB,cAAGA,WAAW,KAClC,KAAQ,oBADY,SAFxB,MAIwB,cAAGA,WAAW,KAClC,KAAQ,4BADY,aAJxB,YAQF,iHACiE,cAAGA,WAAW,IAC3E,KAAQ,sBADqD,sBADjE,yHAIA,qBAAK,iBAAMA,WAAW,OAAjB,0BAEL,uFACA,oBACE,eAAIA,WAAW,OAAK,mBAAQA,WAAW,MAAnB,gBAApB,UACA,eAAIA,WAAW,OAAK,mBAAQA,WAAW,MAAnB,gBAApB,gBAEF,oJAEA,qBAAK,iBAAMA,WAAW,OAAjB,iNAUL,oBACE,eAAIA,WAAW,OAAK,mBAAQA,WAAW,MAAnB,QAApB,2CACA,eAAIA,WAAW,OAAK,mBAAQA,WAAW,MAAnB,WAApB,8CACA,eAAIA,WAAW,OAAK,mBAAQA,WAAW,MAAnB,eAApB,4DACA,eAAIA,WAAW,OAAK,mBAAQA,WAAW,MAAnB,UAApB,4CAA2G,uBAAYA,WAAW,MAAvB,kBAA3G,4BAAkM,uBAAYA,WAAW,MAAvB,oDAClM,eAAIA,WAAW,OAAK,mBAAQA,WAAW,MAAnB,WAApB,+DACA,eAAIA,WAAW,OAAK,mBAAQA,WAAW,MAAnB,QAApB,qIACA,eAAIA,WAAW,OAAK,mBAAQA,WAAW,MAAnB,gBAApB,oEAEF,0EAA2D,cAAGA,WAAW,IACrE,KAAQ,qCAD+C,uCAG3D,iQAEA,4GAA6F,cAAGA,WAAW,IACvG,KAAQ,yBADiF,2BAG7F,yJAC2F,mBAAQA,WAAW,KAAnB,aAD3F,gEACwM,mBAAQA,WAAW,KAAnB,gBADxM,6BACqR,mBAAQA,WAAW,KAAnB,WADrR,sJAEA,0EACA,qBAAK,iBAAMA,WAAW,OAAjB,yMAUL,gGAAiF,mBAAQA,WAAW,KAAnB,aAAjF,gBACA,qBAAK,iBAAMA,WAAW,OAAjB,kCAEL,2EAA4D,mBAAQA,WAAW,KAAnB,WAA5D,uHAA8N,mBAAQA,WAAW,KAAnB,WAA9N,YAAqR,cAAGA,WAAW,IAC/R,KAAQ,yBADyQ,2BAGrR,6LAA8K,uBAAYA,WAAW,KAAvB,eAA9K,qCACA,2EAA4D,mBAAQA,WAAW,KAAnB,WAA5D,4CAAmJ,mBAAQA,WAAW,KAAnB,WAAnJ,WACA,qBAAK,iBAAMA,WAAW,OAAjB,yJASL,oDACA,mBAAG,uBAAYA,WAAW,KAAvB,qCAAH,kEAAkJ,eAAIA,WAAW,KAAf,aAClJ,mBAAG,uBAAYA,WAAW,KAAvB,uBAAH,2EAA6I,eAAIA,WAAW,KAAf,SAC7I,mBAAG,uBAAYA,WAAW,KAAvB,qEAAH,2FAC0F,mBAAQA,WAAW,KAAnB,UAD1F,mBACuJ,uBAAYA,WAAW,KAAvB,iBACvJ,mBAAG,uBAAYA,WAAW,KAAvB,sBAAH,8HAA+L,uBAAYA,WAAW,KAAvB,oCAC/L,yJACA,wMAMJJ,EAAWK,gBAAiB","sources":["webpack://adrian-chia/./src/posts/2014-07-23-getting-started-on-nodejs.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nexport const _frontmatter = {\n  \"title\": \"Getting Started on NodeJS\",\n  \"date\": \"2014-07-23T02:07:52-05:00\",\n  \"tags\": [\"nodejs\", \"express\"]\n};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`###What is NodeJS?\nNodeJS is a server side, event-driven, non-blocking IO JavaScript platform that helps create lightweight, fast and efficient applications`}</p>\n    <p>{`###What can I do with NodeJS?\nVirtually anything! For example:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`DNS server `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/tjfontaine/node-dns\"\n        }}>{`https://github.com/tjfontaine/node-dns`}</a></li>\n      <li parentName=\"ul\">{`Chat server `}<a parentName=\"li\" {...{\n          \"href\": \"http://code.tutsplus.com/tutorials/using-nodejs-and-websockets-to-build-a-chat-service--net-34482\"\n        }}>{`http://code.tutsplus.com/tutorials/using-nodejs-and-websockets-to-build-a-chat-service—net-34482`}</a></li>\n      <li parentName=\"ul\">{`Web application - This blog is built on `}<a parentName=\"li\" {...{\n          \"href\": \"https://ghost.org/\"\n        }}>{`Ghost`}</a>{` which runs on NodeJS!`}</li>\n      <li parentName=\"ul\">{`CSS preprocessor / JavaScript minification (e.g. `}<a parentName=\"li\" {...{\n          \"href\": \"http://gruntjs.com/\"\n        }}>{`Grunt`}</a>{`, `}<a parentName=\"li\" {...{\n          \"href\": \"http://bower.io/\"\n        }}>{`Bower`}</a>{`, `}<a parentName=\"li\" {...{\n          \"href\": \"http://getbootstrap.com/\"\n        }}>{`Bootstrap`}</a>{`, etc)`}</li>\n    </ul>\n    <p>{`###How do I get start?\nMake sure that you have NodeJS installed, you can download it from `}<a parentName=\"p\" {...{\n        \"href\": \"http://nodejs.org.\"\n      }}>{`http://nodejs.org.`}</a>{` Once you can it installed, check that you can run it from your command prompt / terminal via the following command:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`    node --version\n`}</code></pre>\n    <p>{`There are two important files/directories we need to know about:`}</p>\n    <ol>\n      <li parentName=\"ol\"><strong parentName=\"li\">{`package.json`}</strong>{` file`}</li>\n      <li parentName=\"ol\"><strong parentName=\"li\">{`node_modules`}</strong>{` directory`}</li>\n    </ol>\n    <p>{`###package.json\nThe package.json file stores metadata/information about your project. It typically has the following content`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{\n  \"name\": \"project-name\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Project description\",\n  \"author\": \"Your Name <your@email.com>\"\n  \"private\": true,\n  \"main\": \"main.js\",\n  \"dependencies\": {}\n}\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Name`}</strong>{` - the name of your project (required)`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`version`}</strong>{` - the version of your project (required)`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`description`}</strong>{` - additional information about your project (optional)`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`author`}</strong>{` - author of this project, typically in `}<inlineCode parentName=\"li\">{`author <email>`}</inlineCode>{` pair, you can also use `}<inlineCode parentName=\"li\">{`{\"name\":\"Your Name\", \"email\":\"your@email.com\"}`}</inlineCode></li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`private`}</strong>{` - we do not want to publish this project to npm registry.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`main`}</strong>{` - the main entry point of your project. You can create a .js file with any name as your entry point and put the file name here.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`dependencies`}</strong>{` - dependencies or libraries that the project is going to use.`}</li>\n    </ul>\n    <p>{`For more information about package.json file, visit `}<a parentName=\"p\" {...{\n        \"href\": \"http://browsenpm.org/package.json\"\n      }}>{`http://browsenpm.org/package.json`}</a></p>\n    <p>{`###node_modules\nThe node_modules stores downloaded project dependencies for your project. It can be project specific dependencies, which only usable in the same project, or global dependencies, which can be used in multiple projects.`}</p>\n    <p>{`The dependencies are usually published and downloaded from a registry. The default is `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.npmjs.org\"\n      }}>{`https://www.npmjs.org`}</a></p>\n    <p>{`##Creating a Web Application Project\nCreate an empty directory for your project, you can name it anything you want, let’s call it `}<strong parentName=\"p\">{`MyProject`}</strong>{` for now. Enter into the directory and create a file called `}<strong parentName=\"p\">{`package.json`}</strong>{` and another file called `}<strong parentName=\"p\">{`main.js`}</strong>{`. The package.json file describes information about your project and is very important especially if your project depends on third party modules.`}</p>\n    <p>{`In your package.json file add the following content`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{\n  \"name\": \"myproject\",\n  \"version\": \"1.0.0\",\n  \"description\": \"NodeJS example\",\n  \"author\": \"Your Name <your@email.com>\"\n  \"private\": true,\n  \"main\": \"main.js\",\n  \"dependencies\": {}\n}\n`}</code></pre>\n    <p>{`Next, in your command prompt / terminal, execute the following command in `}<strong parentName=\"p\">{`MyProject`}</strong>{` directory:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`npm install express --save\n`}</code></pre>\n    <p>{`This will download and install a dependencies called `}<strong parentName=\"p\">{`express`}</strong>{`, which is a light weight web application framework, and stored in node_modules folder. For more information about `}<strong parentName=\"p\">{`express`}</strong>{`, visit `}<a parentName=\"p\" {...{\n        \"href\": \"http://expressjs.com/\"\n      }}>{`http://expressjs.com/`}</a></p>\n    <p>{`The command above will also append the dependency in the package.json file. You can also specify the dependency manually in the package.json file and execute just the `}<inlineCode parentName=\"p\">{`npm install`}</inlineCode>{` part to install the dependency.`}</p>\n    <p>{`Next, we will write our main application code in the `}<strong parentName=\"p\">{`main.js`}</strong>{` file. Add the following content to the `}<strong parentName=\"p\">{`main.js`}</strong>{` file:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`var express = require('express');\nvar app = express();\n\napp.get('/',function(req,res){\n    res.send('hello world');\n});\n\napp.listen(3000);\n`}</code></pre>\n    <p>{`Let’s explain the code above:`}</p>\n    <p><inlineCode parentName=\"p\">{`var express = require('express');`}</inlineCode>{` means that we import our dependencies, which in this case is `}<em parentName=\"p\">{`express`}</em></p>\n    <p><inlineCode parentName=\"p\">{`var app = express()`}</inlineCode>{` means that we create our Express based application in a variable call `}<em parentName=\"p\">{`app`}</em></p>\n    <p><inlineCode parentName=\"p\">{`app.get('/hello',function(req,res){ res.send('hello world'); }); `}</inlineCode>{`\nmeans that when we visit http: / /`}{`<`}{`hostname or localhost`}{`>`}{`:`}{`<`}{`port`}{`>`}<strong parentName=\"p\">{`/hello`}</strong>{` it will print `}<inlineCode parentName=\"p\">{`hello world`}</inlineCode></p>\n    <p><inlineCode parentName=\"p\">{` app.listen(3000);`}</inlineCode>{` means that we run the application and listen to port 3000. You can also specify the hostname as second argument, such as `}<inlineCode parentName=\"p\">{`app.listen(3000,'example.com')`}</inlineCode></p>\n    <p>{`Lastly, executed the following command and visit http://localhost:3000/hello from your browser and see your application in action!`}</p>\n    <p>{`###In Summary\nWe have learnt what NodeJS is, what it is capable of, some of the important files/directories and how to create a NodeJS based application with Express framework.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","layoutProps","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"sourceRoot":""}